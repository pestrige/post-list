{"version":3,"sources":["components/Content/Content.module.scss","components/Posts/Posts.module.scss","components/Loader/Loader.module.scss","hooks/reduxHooks.ts","store/selectors.ts","store/dataSlice.ts","components/Loader/Loader.tsx","components/Post/Post.tsx","components/Posts/Posts.tsx","hooks/useDebounce.ts","components/Search/Search.tsx","components/Content/Content.tsx","store/actions.ts","App.tsx","store/store.ts","index.tsx","components/Post/Post.module.scss","components/Search/Search.module.scss"],"names":["module","exports","useAppDispatch","useDispatch","useAppSelector","useSelector","isLoadingSelector","data","isLoading","isErrorSelector","isError","searchTextSelector","searchText","getPostsWithUsers","createSelector","posts","users","map","post","name","find","id","userId","getFilteredPosts","text","filter","toLowerCase","includes","dataSlice","createSlice","initialState","reducers","setIsLoading","state","action","payload","setError","setPosts","setUsers","setSearchText","actions","Spinner","className","styles","overlay","wrapper","ring1","ring2","Post","title","body","author","Posts","filteredPosts","list","toString","useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","timer","setTimeout","clearTimeout","Search","dispatch","inputValue","setInputValue","cn","label","icon","aria-label","type","input","placeholder","onChange","evt","target","Content","a","Promise","all","axios","get","postsResponse","usersResponse","main","Loader","error","App","store","configureStore","reducer","dataReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f31725f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Content_main__vb7jG\",\"error\":\"Content_error__2wwGz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Posts_list__1RB4m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Loader_overlay__3WdOv\",\"wrapper\":\"Loader_wrapper__3hasz\",\"ring1\":\"Loader_ring1__1MLCe\",\"ring2\":\"Loader_ring2__qxDro\",\"ring1-animation\":\"Loader_ring1-animation__-npcB\",\"ring2-animation\":\"Loader_ring2-animation__q_wfb\"};","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from '../store/store';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { RootState } from './store';\nimport { createSelector } from 'reselect';\nimport { IFullPost, IPost } from '../interfaces/IPost';\nimport { IUser } from '../interfaces/IUser';\n\nexport const postsSelector = ({data}: RootState) => data.posts;\nexport const usersSelector = ({data}: RootState) => data.users;\nexport const isLoadingSelector = ({data}: RootState) => data.isLoading;\nexport const isErrorSelector = ({data}: RootState) => data.isError;\nexport const searchTextSelector = ({data}: RootState) => data.searchText;\n\nexport const getPostsWithUsers = createSelector(\n  [postsSelector, usersSelector],\n  (posts: IPost[], users: IUser[]) => posts.map((post) => ({\n    ...post,\n    name: users.find(({id}) => id === post.userId)?.name || '',\n  } as IFullPost)));\n\nexport const getFilteredPosts = createSelector(\n  [getPostsWithUsers, searchTextSelector],\n  (posts, text) => posts.filter(({name}) => {\n    return name.toLowerCase().includes(text.toLowerCase());\n  }),\n);\n","import { IPost } from '../interfaces/IPost';\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { IUser } from '../interfaces/IUser';\n\ninterface dataState {\n  posts: IPost[];\n  users: IUser[];\n  isLoading: boolean;\n  isError: boolean;\n  searchText: string;\n}\n\nconst initialState: dataState = {\n  posts: [],\n  users: [],\n  isLoading: true,\n  isError: false,\n  searchText: '',\n};\n\nconst dataSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {\n    setIsLoading(state, action: PayloadAction<boolean>) {\n      state.isLoading = action.payload;\n    },\n    setError(state, action: PayloadAction<boolean>) {\n      state.isError = action.payload;\n    },\n    setPosts(state, action: PayloadAction<IPost[]>) {\n      state.posts = action.payload;\n    },\n    setUsers(state, action: PayloadAction<IUser[]>) {\n      state.users = action.payload;\n    },\n    setSearchText(state, action: PayloadAction<string>) {\n      state.searchText = action.payload;\n    },\n  },\n});\n\nexport const {setIsLoading, setError, setPosts, setUsers, setSearchText} = dataSlice.actions;\n\nexport default dataSlice.reducer;\n","import React from 'react';\nimport styles from './Loader.module.scss';\n\nconst Spinner = (): JSX.Element => {\n  return (\n    <div className={styles.overlay}>\n      <div className={styles.wrapper}>\n        <span className={styles.ring1} />\n        <span className={styles.ring2} />\n      </div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React from 'react';\nimport { PostProps } from './Post.props';\nimport styles from './Post.module.scss';\n\nconst Post = ({post}: PostProps): JSX.Element => {\n  const {title, body, name} = post;\n\n  return (\n    <li className={styles.wrapper}>\n      <h2 className={styles.title}>\n        {title}\n      </h2>\n      <p className={styles.body}>\n        {body}\n      </p>\n      <p className={styles.author}>\n        {name}\n      </p>\n    </li>\n  );\n};\n\nexport default Post;\n","import React from 'react';\nimport { useAppSelector } from '../../hooks/reduxHooks';\nimport { getFilteredPosts } from '../../store/selectors';\nimport Post from '../Post/Post';\nimport styles from './Posts.module.scss';\n\nconst Posts = (): JSX.Element => {\n  const filteredPosts = useAppSelector(getFilteredPosts);\n\n  return (\n    <ul className={styles.list}>\n      {\n        filteredPosts.map((post) => (\n          <Post\n            key={post.id.toString()}\n            post={post}\n          />\n        ))\n      }\n    </ul>\n  );\n};\n\nexport default Posts;\n","import { useEffect, useState } from 'react';\n\nfunction useDebounce<T>(value: T, delay?: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\n\n  useEffect(() => {\n    const timer = setTimeout(() => setDebouncedValue(value), delay || 500);\n\n    return () => {\n      clearTimeout(timer);\n    }\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n\nexport default useDebounce;\n","import React, { ChangeEvent, useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport styles from './Search.module.scss';\nimport { useAppDispatch, useAppSelector } from '../../hooks/reduxHooks';\nimport { searchTextSelector } from '../../store/selectors';\nimport { setSearchText } from '../../store/dataSlice';\nimport useDebounce from '../../hooks/useDebounce';\n\nconst Search = (): JSX.Element => {\n  const dispatch = useAppDispatch();\n  const searchText = useAppSelector(searchTextSelector);\n  const [inputValue, setInputValue] = useState<string>(searchText);\n  const debouncedValue = useDebounce<string>(inputValue, 500);\n\n  const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\n    const value = evt.target.value;\n    setInputValue(value);\n  };\n\n  useEffect(() => {\n    dispatch(setSearchText(debouncedValue));\n  }, [debouncedValue, dispatch]);\n\n  return (\n    <div className={cn(styles.wrapper, 'container')}>\n      <label className={styles.label}>\n        <span className={styles.icon} aria-label='Иконка поиска'/>\n        <input\n          type='text'\n          className={styles.input}\n          placeholder='Filter by author...'\n          onChange={handleChange}\n          value={inputValue}\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Search;\n","import React, { useEffect } from 'react';\nimport styles from './Content.module.scss';\nimport { useAppDispatch, useAppSelector } from '../../hooks/reduxHooks';\nimport { isErrorSelector, isLoadingSelector} from '../../store/selectors';\nimport { fetchData } from '../../store/actions';\nimport Loader from '../Loader/Loader';\nimport Posts from '../Posts/Posts';\nimport Search from '../Search/Search';\n\nconst Content = (): JSX.Element => {\n  const dispatch = useAppDispatch();\n  const isLoading = useAppSelector(isLoadingSelector);\n  const isError = useAppSelector(isErrorSelector);\n\n  useEffect(() => {\n    dispatch(fetchData());\n  }, [dispatch]);\n\n  return (\n    <main className={styles.main}>\n      <h1 className='visually-hidden'>Posts</h1>\n      <section className='container'>\n        <Search />\n        {isLoading && !isError\n          ? <Loader />\n          : <Posts />\n        }\n        {isError && <p className={styles.error}>Page load error, come back later...</p>}\n      </section>\n    </main>\n  );\n};\n\nexport default Content;\n","import { AppDispatch } from './store';\nimport axios from 'axios';\nimport { IPost } from '../interfaces/IPost';\nimport { IUser } from '../interfaces/IUser';\nimport {setIsLoading, setPosts, setError, setUsers} from './dataSlice';\n\nexport const fetchData = () => async (dispatch: AppDispatch) => {\n  try {\n    dispatch(setIsLoading(true));\n    const [postsResponse, usersResponse] = await Promise.all([\n      axios.get<IPost[]>('https://jsonplaceholder.typicode.com/posts'),\n      axios.get<IUser[]>('https://jsonplaceholder.typicode.com/users'),\n    ]);\n    dispatch(setIsLoading(false));\n    dispatch(setError(false));\n    dispatch(setPosts(postsResponse.data));\n    dispatch(setUsers(usersResponse.data));\n  } catch (error) {\n    dispatch(setIsLoading(false));\n    dispatch(setError(true));\n  }\n};\n\n// export const fetchUsers = () => async (dispatch: AppDispatch) => {\n//   try {\n//     dispatch(setIsUsersLoading(true));\n//     const response = await axios.get<IUser[]>('https://jsonplaceholder.typicode.com/users');\n//     dispatch(setUsers(response.data));\n//   } catch (error) {\n//     dispatch(setIsUsersError());\n//   }\n// };\n","import React from 'react';\nimport Content from './components/Content/Content';\n\nfunction App() {\n  return (\n    <Content />\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport dataReducer from './dataSlice';\n\nexport const store = configureStore({\n  reducer: {\n    data: dataReducer,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { store } from './store/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Post_wrapper__34B0D\",\"title\":\"Post_title__14e0g\",\"body\":\"Post_body__3bvdn\",\"author\":\"Post_author__3xUYm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Search_wrapper__16aXF\",\"label\":\"Search_label__1296y\",\"icon\":\"Search_icon__2He--\",\"input\":\"Search_input__3iTQH\"};"],"sourceRoot":""}